{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { FirebaseContext } from \"../context/firebasecontext\";\nexport default function useAuthListener() {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged(authUser => {\n      if (authUser) {\n        localStorage.setItem('authUser', JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        localStorage.removeItem('authUser');\n        setUser(null);\n      }\n    });\n    return () => listener();\n  }, []);\n  return {\n    user\n  };\n}\n\n_s(useAuthListener, \"og5KOqGEvEXX6clV2sRD6qnxvZ4=\");","map":{"version":3,"sources":["E:/vs code projects/netflix/src/hooks/use-auth-listener.js"],"names":["useState","useEffect","useContext","FirebaseContext","useAuthListener","user","setUser","JSON","parse","localStorage","getItem","firebase","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAC5BO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD4B,CAAhC;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAeT,UAAU,CAACC,eAAD,CAA/B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,QAAQ,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,kBAAhB,CAAoCC,QAAD,IAAc;AAC9D,UAAIA,QAAJ,EAAc;AACVN,QAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCT,IAAI,CAACU,SAAL,CAAeF,QAAf,CAAjC;AACAT,QAAAA,OAAO,CAACS,QAAD,CAAP;AACH,OAHD,MAGO;AACHN,QAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAZ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,KARgB,CAAjB;AAUA,WAAO,MAAMM,QAAQ,EAArB;AACH,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAO;AAAEP,IAAAA;AAAF,GAAP;AACH;;GAtBuBD,e","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { FirebaseContext } from \"../context/firebasecontext\";\r\n\r\nexport default function useAuthListener() {\r\n    const [user, setUser] = useState(\r\n        JSON.parse(localStorage.getItem('authUser'))\r\n    );\r\n \r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    useEffect(() => {\r\n        const listener = firebase.auth().onAuthStateChanged((authUser) => {\r\n            if (authUser) {\r\n                localStorage.setItem('authUser', JSON.stringify(authUser));\r\n                setUser(authUser);\r\n            } else {\r\n                localStorage.removeItem('authUser');\r\n                setUser(null);\r\n            }\r\n        });\r\n\r\n        return () => listener();\r\n    }, []);\r\n\r\n    return { user };\r\n}"]},"metadata":{},"sourceType":"module"}