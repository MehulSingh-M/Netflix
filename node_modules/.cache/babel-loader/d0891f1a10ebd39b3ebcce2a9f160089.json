{"ast":null,"code":"var _jsxFileName = \"E:\\\\vs code projects\\\\netflix\\\\src\\\\containers\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport { SelectProfileContainer } from './profiles';\nimport { FirebaseContext } from '../context/firebasecontext';\nimport { Header, Loading } from '../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function BrowseContainer({\n  slides\n}) {\n  _s();\n\n  const [profile, setProfile] = useState({});\n  const [loading, setLoading] = useState(true);\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const user = firebase.auth().currentUser || {};\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n  return profile.displayName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(Loading, {\n      src: user.photoURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Loading.ReleaseBody, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(SelectProfileContainer, {\n    user: user,\n    setProfile: setProfile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 6\n  }, this);\n}\n\n_s(BrowseContainer, \"EG5Q2Ud/mJ7z7uEB4RFjmWLwAes=\");\n\n_c = BrowseContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseContainer\");","map":{"version":3,"sources":["E:/vs code projects/netflix/src/containers/browse.js"],"names":["React","useEffect","useContext","useState","SelectProfileContainer","FirebaseContext","Header","Loading","BrowseContainer","slides","profile","setProfile","loading","setLoading","firebase","user","auth","currentUser","setTimeout","displayName","photoURL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,sBAAT,QAAuC,YAAvC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAA+B,eAA/B;;;AAGA,OAAO,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAoC;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAeZ,UAAU,CAACG,eAAD,CAA/B;AAGA,QAAMU,IAAI,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,WAAhB,IAA+B,EAA5C;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,UAAU,CAAC,MAAM;AACbL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJQ,EAIN,CAACH,OAAO,CAACS,WAAT,CAJM,CAAT;AAMA,SAAOT,OAAO,CAACS,WAAR,gBAEH;AAAA,eACCP,OAAO,gBAAK,QAAC,OAAD;AAAS,MAAA,GAAG,EAAEG,IAAI,CAACK;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAL,gBAA2C,QAAC,OAAD,CAAS,WAAT;AAAA;AAAA;AAAA;AAAA,YADnD,eAGA,QAAC,MAAD;AAAA,mCAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBAFG,gBASN,QAAC,sBAAD;AAAwB,IAAA,IAAI,EAAEL,IAA9B;AAAoC,IAAA,UAAU,EAAEJ;AAAhD;AAAA;AAAA;AAAA;AAAA,UATD;AAWH;;GAxBeH,e;;KAAAA,e","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\r\nimport { SelectProfileContainer } from './profiles';\r\nimport { FirebaseContext } from '../context/firebasecontext';\r\nimport { Header, Loading} from '../components'\r\n\r\n\r\nexport function BrowseContainer({ slides}) {\r\n    const [profile, setProfile] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const { firebase } = useContext(FirebaseContext);\r\n  \r\n\r\n    const user = firebase.auth().currentUser || {};\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 3000);\r\n    }, [profile.displayName]);\r\n\r\n    return profile.displayName ? (\r\n\r\n        <>\r\n        {loading ? ( <Loading src={user.photoURL} /> ) : ( <Loading.ReleaseBody /> )}\r\n\r\n        <Header> <p>Hello</p></Header>\r\n        </>\r\n    ) : (\r\n    \r\n     <SelectProfileContainer user={user} setProfile={setProfile}/>\r\n    ); \r\n}"]},"metadata":{},"sourceType":"module"}