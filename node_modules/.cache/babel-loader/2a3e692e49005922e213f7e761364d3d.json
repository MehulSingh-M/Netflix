{"ast":null,"code":"var _jsxFileName = \"E:\\\\vs code projects\\\\netflix\\\\src\\\\pages\\\\signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FirebaseContext } from '../context/firebasecontext';\nimport { HeaderContainer } from '../containers/header';\nimport { FooterContainer } from '../containers/footer';\nimport { Form } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n\n  const history = useHistory();\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const [firstName, setFirstName] = useState('');\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = setState('');\n  const isInvalid = firstName === '' || password === '' || emailAddress === '';\n\n  const handleSignup = event => {\n    event.preventDefault();\n    firebase.auth().createUserWithEmailAndPassword(emailAddress, password).then(result => result.user.updateProfile({\n      displayName: firstName,\n      photoURL: Math.floor(Math.random() * 5) + 1\n    }).then(() => {\n      history.push(ROUTES.BROWSE);\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Title, {\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Form.Error, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Base, {\n          onSubmit: handleSignup,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            placeholder: \"Username\",\n            value: firstName,\n            onChange: ({\n              target\n            }) => setFirstName(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            placeholder: \"Email Address\",\n            value: emailAddress,\n            onChange: ({\n              target\n            }) => setEmailAddress(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: ({\n              target\n            }) => setPassword(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Submit, {\n            disabled: isInvalid,\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [\"Already a user? \", /*#__PURE__*/_jsxDEV(Form.Link, {\n            to: \"/signin\",\n            children: \"Sign in now.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.TextSmall, {\n          children: \"This page is protected by Development team reCAPTCHA to ensure you're not a bot. Learn more.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FooterContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signup, \"mHty4RtlVQuo7fm6bgBOhA/E7q0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["E:/vs code projects/netflix/src/pages/signup.js"],"names":["React","useState","useContext","useHistory","FirebaseContext","HeaderContainer","FooterContainer","Form","ROUTES","Signup","history","firebase","firstName","setFirstName","emailAddress","setEmailAddress","password","setPassword","error","setError","setState","isInvalid","handleSignup","event","preventDefault","auth","createUserWithEmailAndPassword","then","result","user","updateProfile","displayName","photoURL","Math","floor","random","push","BROWSE","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FirebaseContext } from '../context/firebasecontext';\r\nimport { HeaderContainer } from '../containers/header';\r\nimport { FooterContainer } from '../containers/footer';\r\nimport { Form } from '../components';\r\nimport * as ROUTES from '../constants/routes'\r\n\r\nexport default function Signup() {\r\n    const history = useHistory();\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [emailAddress, setEmailAddress] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = setState('');\r\n\r\n    const isInvalid = firstName === '' || password === '' || emailAddress === '';\r\n\r\n    const handleSignup = (event) => {\r\n        event.preventDefault();\r\n\r\n       firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(emailAddress, password)\r\n            .then((result) => \r\n            result.user.updateProfile({\r\n                displayName: firstName,\r\n                photoURL: Math.floor(Math.random() * 5) + 1,\r\n            })\r\n            .then(() => {\r\n                history.push(ROUTES.BROWSE);\r\n            }) \r\n       );\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <HeaderContainer> \r\n                <Form>\r\n                    <Form.Title>Signup</Form.Title>\r\n                    {error && <Form.Error>{error}</Form.Error>}\r\n\r\n                    <Form.Base onSubmit={handleSignup} method=\"POST\">\r\n                        <Form.Input\r\n                            placeholder=\"Username\"\r\n                            value={firstName}\r\n                            onChange={({ target }) => setFirstName(target.value)} \r\n                        />\r\n\r\n                        <Form.Input\r\n                            placeholder=\"Email Address\"\r\n                            value={emailAddress}\r\n                            onChange={({ target }) => setEmailAddress(target.value)} \r\n                        />\r\n\r\n                        <Form.Input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={({ target }) => setPassword(target.value)} \r\n                        />\r\n\r\n                        <Form.Submit disabled={isInvalid} type=\"submit\">\r\n                            Sign Up\r\n                        </Form.Submit>\r\n                    </Form.Base>\r\n\r\n                    <Form.Text>\r\n                        Already a user? <Form.Link to=\"/signin\">Sign in now.</Form.Link>\r\n                    </Form.Text>\r\n                    <Form.TextSmall>\r\n                        This page is protected by Development team reCAPTCHA to ensure you're not a bot. Learn more.\r\n                    </Form.TextSmall>\r\n                </Form>\r\n            \r\n            </HeaderContainer>\r\n            <FooterContainer/>\r\n        </>    \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}