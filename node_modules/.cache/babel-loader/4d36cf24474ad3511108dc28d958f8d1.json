{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { FirebaseContext } from \"../context/firebasecontext\";\nexport default function useContent(target) {\n  _s();\n\n  const [content, setContent] = useState([]);\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  useEffect(() => {\n    firebase.firestore().collection(target).get().then(snapshot => {\n      const allContent = snapshot.docs.map(contentObj => ({ ...contentObj.data(),\n        docId: contentObj.id\n      }));\n      setContent(allContent);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }, []);\n  return {\n    [target]: content\n  };\n}\n\n_s(useContent, \"79Q0ufnwaQJWOWD2zOKYV7BrSNs=\");","map":{"version":3,"sources":["E:/vs code projects/netflix/src/hooks/use-content.js"],"names":["useState","useEffect","useContext","FirebaseContext","useContent","target","content","setContent","firebase","firestore","collection","get","then","snapshot","allContent","docs","map","contentObj","data","docId","id","catch","error","console","log","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAEA,eAAe,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAaN,UAAU,CAACC,eAAD,CAA7B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACXO,IAAAA,QAAQ,CACJC,SADJ,GAEIC,UAFJ,CAEeL,MAFf,EAGIM,GAHJ,GAIIC,IAJJ,CAIUC,QAAD,IAAc;AAChB,YAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,UAAD,KAAiB,EAClD,GAAGA,UAAU,CAACC,IAAX,EAD+C;AAElDC,QAAAA,KAAK,EAAEF,UAAU,CAACG;AAFgC,OAAjB,CAAlB,CAAnB;AAKAb,MAAAA,UAAU,CAACO,UAAD,CAAV;AACH,KAXJ,EAYIO,KAZJ,CAYWC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH,KAdJ;AAeJ,GAhBQ,EAgBF,EAhBE,CAAT;AAkBA,SAAO;AAAE,KAACpB,MAAD,GAAUC;AAAZ,GAAP;AACH;;GAvBuBF,U","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { FirebaseContext } from \"../context/firebasecontext\";\r\n\r\nexport default function useContent(target) {\r\n    const [content, setContent] = useState([]);\r\n    const {firebase} = useContext(FirebaseContext);\r\n\r\n    useEffect(() => {\r\n         firebase\r\n            .firestore()\r\n            .collection(target)\r\n            .get()\r\n            .then((snapshot) => {\r\n                const allContent = snapshot.docs.map((contentObj) => ({\r\n                    ...contentObj.data(),\r\n                    docId: contentObj.id,\r\n                }));\r\n\r\n                setContent(allContent);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n            });\r\n    },     []);\r\n\r\n    return { [target]: content };\r\n}"]},"metadata":{},"sourceType":"module"}