{"ast":null,"code":"var _jsxFileName = \"E:\\\\vs code projects\\\\netflix\\\\src\\\\components\\\\accordion\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useContext, createContext } from 'react';\nimport { Container, Frame, Title, Inner, Header, Item, Body } from './styles/accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleContext = /*#__PURE__*/createContext();\nexport default function Accordion({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Container, { ...restProps,\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      children: [\" \", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n}\n_c = Accordion;\n\nAccordion.Title = function AccordionTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Title, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\nAccordion.Frame = function AccordionFrame({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Frame, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n\nAccordion.Item = _s(function AccordionItem({\n  children,\n  ...restProps\n}) {\n  _s();\n\n  const [toggleshow, setToggle] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ToggleContext.Provider, {\n    value: {\n      toggleShow,\n      setToggleShow\n    },\n    children: [/*#__PURE__*/_jsxDEV(Item, { ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}, \"dbVBZUIzw1lfcacndCwkvo7Z2i8=\");\nAccordion.Header = _s2(function AccordionHeader({\n  children,\n  ...restProps\n}) {\n  _s2();\n\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/_jsxDEV(Header, {\n    onClick: () => setToggleShow(toggleShow => toggleShow),\n    ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}, \"TK/oZdgUDCvLrKWRR9mTHBf6KYY=\");\nAccordion.Body = _s3(function AccordionBody({\n  children,\n  ...restProps\n}) {\n  _s3();\n\n  const {\n    toggleShow\n  } = useContext(ToggleContext);\n  return toggleShow ? /*#__PURE__*/_jsxDEV(Body, { ...restProps,\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 25\n  }, this) : null;\n}, \"3GdtCldLvewOgpnz6EBMvQFgAf4=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["E:/vs code projects/netflix/src/components/accordion/index.js"],"names":["React","useState","useContext","createContext","Container","Frame","Title","Inner","Header","Item","Body","ToggleContext","Accordion","children","restProps","AccordionTitle","AccordionFrame","AccordionItem","toggleshow","setToggle","toggleShow","setToggleShow","AccordionHeader","AccordionBody"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,aAAtC,QAA0D,OAA1D;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,IAAjD,EAAuDC,IAAvD,QAAkE,oBAAlE;;AAEA,MAAMC,aAAa,gBAAGR,aAAa,EAAnC;AAEA,eAAe,SAASS,SAAT,CAAoB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAApB,EAA+C;AAC5D,sBACI,QAAC,SAAD,OAAeA,SAAf;AAAA,2BACE,QAAC,KAAD;AAAA,sBAASD,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD;KARuBD,S;;AAUxBA,SAAS,CAACN,KAAV,GAAkB,SAASS,cAAT,CAAwB;AAAEF,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAmD;AACjE,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFD;;AAIAD,SAAS,CAACP,KAAV,GAAkB,SAASW,cAAT,CAAwB;AAAEH,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAmD;AACjE,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFD;;AAIAD,SAAS,CAACH,IAAV,MAAiB,SAASQ,aAAT,CAAuB;AAAEJ,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAkD;AAAA;;AAC/D,QAAM,CAACI,UAAD,EAAaC,SAAb,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AAEA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEmB,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAA/B;AAAA,4BACI,QAAC,IAAD,OAAUP,SAAV;AAAA,gBAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CARD;AAUAD,SAAS,CAACJ,MAAV,OAAmB,SAASc,eAAT,CAAyB;AAAET,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAzB,EAAoD;AAAA;;AAEnE,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCnB,UAAU,CAACS,aAAD,CAAhD;AAEA,sBACI,QAAC,MAAD;AACC,IAAA,OAAO,EAAE,MAAMU,aAAa,CAAED,UAAD,IAAgBA,UAAjB,CAD7B;AAAA,OAEKN,SAFL;AAAA,cAIKD;AAJL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAZD;AAcAD,SAAS,CAACF,IAAV,OAAiB,SAASa,aAAT,CAAuB;AAAEV,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAkD;AAAA;;AAC/D,QAAM;AAAEM,IAAAA;AAAF,MAAiBlB,UAAU,CAACS,aAAD,CAAjC;AAEA,SAAOS,UAAU,gBAAG,QAAC,IAAD,OAAUN,SAAV;AAAA,eAAsBD,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,GAA6C,IAA9D;AACH,CAJD","sourcesContent":["import React, { useState, useContext, createContext} from 'react';\r\nimport { Container, Frame, Title, Inner, Header, Item, Body} from './styles/accordion';\r\n\r\nconst ToggleContext = createContext();\r\n\r\nexport default function Accordion ({ children, ...restProps}) {\r\n  return(  \r\n      <Container {...restProps}>\r\n        <Inner> {children}</Inner>\r\n    \r\n    \r\n    </Container>\r\n  );  \r\n}\r\n\r\nAccordion.Title = function AccordionTitle({ children, ...restProps}) {\r\n    return <Title {...restProps}>{children}</Title>;\r\n};\r\n\r\nAccordion.Frame = function AccordionFrame({ children, ...restProps}) {\r\n    return <Frame {...restProps}>{children}</Frame>;\r\n};\r\n\r\nAccordion.Item = function AccordionItem({ children, ...restProps}) {\r\n    const [toggleshow, setToggle] = useState(false);\r\n\r\n    return ( \r\n        <ToggleContext.Provider value={{ toggleShow, setToggleShow}}>\r\n            <Item {...restProps}>{children}</Item>;\r\n        </ToggleContext.Provider>\r\n    );    \r\n};\r\n\r\nAccordion.Header = function AccordionHeader({ children, ...restProps}) {\r\n\r\n    const { toggleShow, setToggleShow } = useContext(ToggleContext);\r\n\r\n    return (\r\n        <Header\r\n         onClick={() => setToggleShow((toggleShow) => toggleShow)} \r\n         {...restProps}\r\n        >\r\n            {children}\r\n        </Header>\r\n    );    \r\n};\r\n\r\nAccordion.Body = function AccordionBody({ children, ...restProps}) {\r\n    const { toggleShow } = useContext(ToggleContext);\r\n\r\n    return toggleShow ? <Body {...restProps}>{children} </Body> : null; \r\n};"]},"metadata":{},"sourceType":"module"}