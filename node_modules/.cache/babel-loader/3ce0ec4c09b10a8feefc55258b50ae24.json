{"ast":null,"code":"var _jsxFileName = \"E:\\\\vs code projects\\\\netflix\\\\src\\\\helpers\\\\routes.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function IsUserRedirect({\n  user,\n  loggedInPath,\n  children,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: () => {\n      if (!user) {\n        return children;\n      }\n\n      if (user) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: loggedInPath\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this);\n      }\n\n      return null;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = IsUserRedirect;\nexport function ProtectedRoute({\n  user,\n  children,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    reder: ({\n      location\n    }) => {\n      if (user) {\n        return children;\n      }\n\n      if (!user) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: 'signin',\n            state: {\n              from: location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this);\n      }\n\n      return null;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c2 = ProtectedRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IsUserRedirect\");\n$RefreshReg$(_c2, \"ProtectedRoute\");","map":{"version":3,"sources":["E:/vs code projects/netflix/src/helpers/routes.js"],"names":["React","Route","Redirect","IsUserRedirect","user","loggedInPath","children","rest","pathname","ProtectedRoute","location","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,OAAO,SAASC,cAAT,CAAwB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,QAAtB;AAAgC,KAAGC;AAAnC,CAAxB,EAAmE;AACtE,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAE,MAAM;AACV,UAAI,CAACH,IAAL,EAAW;AACP,eAAOE,QAAP;AACH;;AAED,UAAIF,IAAJ,EAAU;AAEN,4BACI,QAAC,QAAD;AACI,UAAA,EAAE,EAAE;AACAI,YAAAA,QAAQ,EAAEH;AADV;AADR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH;;AAED,aAAO,IAAP;AACH;AAnBL;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;KAxBeF,c;AA0BhB,OAAO,SAASM,cAAT,CAAwB;AAAEL,EAAAA,IAAF;AAAQE,EAAAA,QAAR;AAAkB,KAAGC;AAArB,CAAxB,EAAqD;AACxD,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,KAAK,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAiB;AACpB,UAAIN,IAAJ,EAAU;AACN,eAAOE,QAAP;AACH;;AAED,UAAI,CAACF,IAAL,EAAW;AACP,4BACI,QAAC,QAAD;AACI,UAAA,EAAE,EAAE;AACFI,YAAAA,QAAQ,EAAE,QADR;AAEFG,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEF;AAAR;AAFL;AADR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH;;AAED,aAAO,IAAP;AACH;AAnBL;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;MAxBeD,c","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => {\r\n                if (!user) {\r\n                    return children;\r\n                }\r\n\r\n                if (user) {\r\n                    \r\n                    return (\r\n                        <Redirect \r\n                            to={{\r\n                                pathname: loggedInPath,\r\n                            }}\r\n                        />    \r\n                    );\r\n                }\r\n\r\n                return null;\r\n            }}\r\n        />    \r\n    );\r\n}\r\n\r\nexport function ProtectedRoute({ user, children, ...rest }) {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            reder={({ location}) => {\r\n                if (user) {\r\n                    return children; \r\n                }\r\n\r\n                if (!user) {\r\n                    return (\r\n                        <Redirect \r\n                            to={{ \r\n                              pathname: 'signin',\r\n                              state: { from: location },\r\n                            }}\r\n                        />     \r\n                    );\r\n                }\r\n\r\n                return null;\r\n            }}\r\n        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}