{"ast":null,"code":"var _jsxFileName = \"E:\\\\vs code projects\\\\netflix\\\\src\\\\helpers\\\\routes.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function IsUserRedirect({\n  user,\n  loggedInPath,\n  children,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: () => {\n      if (!user) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: loggedInPath\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 28\n        }, this);\n      }\n\n      if (user) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: loggedInPath\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this);\n      }\n\n      return null;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = IsUserRedirect;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsUserRedirect\");","map":{"version":3,"sources":["E:/vs code projects/netflix/src/helpers/routes.js"],"names":["React","Route","Redirect","IsUserRedirect","user","loggedInPath","children","rest","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,OAAO,SAASC,cAAT,CAAwB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,QAAtB;AAAgC,KAAGC;AAAnC,CAAxB,EAAkE;AACrE,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAE,MAAM;AACV,UAAI,CAACH,IAAL,EAAW;AACP,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEI,YAAAA,QAAQ,EAAEH;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;;AAED,UAAID,IAAJ,EAAU;AACN,4BACI,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEI,YAAAA,QAAQ,EAAEH;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH;;AAED,aAAO,IAAP;AAEH;AAfL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;KApBeF,c","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest}) {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={() => {\r\n                if (!user) {\r\n                    return <Redirect to={{ pathname: loggedInPath}} />\r\n                }\r\n\r\n                if (user) {\r\n                    return (\r\n                        <Redirect to={{ pathname: loggedInPath}} />\r\n                    );\r\n                }\r\n\r\n                return null;\r\n\r\n            }}\r\n        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}